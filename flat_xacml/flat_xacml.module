<?php

function flat_xacml_flat_has_permissions_alter(&$has_permissions, &$object){

    module_load_include('inc', 'islandora', 'includes/utilities');
    global $user;

    // return false for anonymous users
    if ($user->uid === 0) {
            return FALSE;
    }

    $user_name = $user->name;

    $user_roles = $user->roles;

    // administrator and manager roles should always have access
    if (in_array('administrator', $user_roles) || in_array('manager', $user_roles)) {
            return TRUE;
    }

    // object owner should always have access
    $owners = explode(',',$object->owner);
    if (in_array($user_name, $owners)){
        return TRUE;
    }

    // check if user has manager permissions in XACML policy, either as user or by role
    $id = "POLICY";
    $predicate = 'isManageableByUser';
    $manageable_by_users = [];

    foreach ($object->relationships->get(ISLANDORA_RELS_EXT_URI, $predicate) as $entry){
        $manageable_by_users [] = $entry['object']['value'];
    }

    $is_manageable_user = in_array($user_name, $manageable_by_users);

    $predicate = 'isManageableByRole';
    $manageable_by_roles = [];

    foreach ($object->relationships->get(ISLANDORA_RELS_EXT_URI, $predicate) as $entry){
        $manageable_by_roles [] = $entry['object']['value'];
    }

    $has_manageable_role = !empty(array_intersect($manageable_by_roles, $user_roles));
    $has_permissions = ($is_manageable_user OR $has_manageable_role) ? TRUE: FALSE;
    return $has_permissions;

}
