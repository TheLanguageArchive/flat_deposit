<?php

use Drupal\flat_workspaces\FieldStorageDefinition;

/**
 * Implements hook_install
 *
 */
function flat_workspaces_install()
{
    // of this was moved to the config yml files in flat_deposit


    //basic settings
    // module_load_include('inc', 'flat_workspaces', 'inc/config');
    // flat_workspaces_set_variables();

    // $t = get_t();

    // $field = array(
    //     'field_name' => 'flat_ws_path',
    //     'type' => 'text',
    //     'cardinality' => 1,
    //     'settings' => array(
    //         'max_length' => 5000)
    // );

    // if (!field_info_field($field['field_name'])) {
    //     field_create_field($field);
    // }

    // $instance = array(
    //     'field_name' => 'flat_ws_path',
    //     'entity_type' => 'node',
    //     'bundle' => 'flat_bundle',
    //     'label' => $t('Path of local workspace stored data'),
    //     'widget' => array(
    //         'type' => 'text_textfield',
    //     ),
    //     'required' => FALSE,
    //     'disabled' => TRUE,
    //     'settings' => array('text_processing' => 0),
    //     'display' => array(
    //         'default' => array(
    //             'label' => 'hidden',
    //             'type' => 'hidden',
    //         ),
    //     ),
    // );

    // if (!field_info_instance($instance['entity_type'], $instance['field_name'], $instance['bundle'])) {
    //     field_create_instance($instance);
    // }

    // else {
    //     field_update_instance($instance);
    // }

    // // Get rid of flat_source field option to select a local resource
    // $field = field_info_field('flat_source');

    // $values = &$field['settings']['allowed_values'];

    // if (!isset($values['local'])){
    //     $values['local'] = 'Select a folder in a workspace on the server';
    //     field_update_field($field);

    // }

    /** @var \Drupal\Core\Entity\Display\EntityFormDisplayInterface $form_display */
    $form_display = \Drupal::entityTypeManager()
        ->getStorage('entity_form_display')
        ->load('node.flat_bundle.default');
    
    $form_display->setComponent('flat_ws_path', [
    'type' => 'text_textfield',
    ]);

    $form_display->save();



}


/**
 * Implements hook_uninstall
 *
 */
function flat_workspaces_uninstall()
{
    // $t = get_t();


    /*
    // Get rid of flat_source field option to select a local resource
    $field = field_info_field('flat_source');

    $values = &$field['settings']['allowed_values'];

    if (isset($values['local'])){

        unset($values['local']);
        field_update_field($field);

    }
    */


}

/* function flat_workspaces_update_8003() {

    $fields['flat_ws_path'] = FieldStorageDefinition::create('string')
      ->setLabel(t('Flat workspace path'))
      ->setDescription(t('Path to a folder containing resources to be added to the bundle.'))
      ->setComputed(TRUE)
      ->setReadOnly(FALSE)
      ->setInternal(FALSE)
      ->setDisplayOptions('view', [
        'label' => 'hidden',
        'region' => 'hidden',
        'weight' => -5,
      ])
      ->setDisplayOptions('form', [
        'label' => 'hidden',
        'region' => 'hidden',
        'weight' => -5,
      ])
      ->setTargetEntityTypeId('node')
      ->setTargetBundle('flat_bundle')
      ->setName('flat_ws_path')
      ->setDisplayConfigurable('form', FALSE)
      ->setDisplayConfigurable('view', FALSE);
  
    // Notify the storage about the new field.
    \Drupal::service('field_definition.listener')->onFieldDefinitionCreate($fields['flat_ws_path']);
  } */

